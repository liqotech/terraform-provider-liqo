name: Linting
on:
  pull_request:

jobs:
  golangci:
    name: Lint golang files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          persist-credentials: false

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Generate version constants
        run: go generate ./liqo

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          only-new-issues: true
          version: latest
          args: --timeout=900s

  gomodtidy:
    name: Enforce go.mod tidiness
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: "${{ github.event.pull_request.head.sha }}"
        repository: ${{github.event.pull_request.head.repo.full_name}}
        persist-credentials: false

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Generate version constants
      run: go generate ./liqo

    - name: Execute go mod tidy and check the outcome
      working-directory: ./
      run: |
        go mod tidy
        exit_code=$(git diff --exit-code)
        exit ${exit_code}

  markdownlint:
    name: Lint markdown files
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: "${{ github.event.pull_request.head.sha }}"
        repository: ${{github.event.pull_request.head.repo.full_name}}
        persist-credentials: false

    - name: Lint markdown files
      uses: avto-dev/markdown-lint@v1
      with:
        config: '.markdownlint.yml'
        args: '**/*.md'
